{"version":3,"sources":["constants.js","main.js"],"names":["DB_PATH","DB_USER","DB_PASSWORD","viz","limit","exist","checkbox","visible","item","classList","remove","add","notVisible","showError","text","document","getElementById","innerHTML","getInputs","inputs","querySelectorAll","map","input","checked","isChecked","includes","isLimitSelected","textRecords","value","createQuery","inputs_rel","match_q","return_q","query","forEach","index","slice","textWeight","where_q","every","console","log","textList","list","split","length","limitPerPlayer","Math","ceil","limit_q","player","join","isInt","num","Number","isInteger","draw","config","container_id","server_url","encrypted","server_user","server_password","labels","Player","caption","size","community","title_properties","relationships","REL","thickness","EASY","HARD","initial_cypher","NeoVis","default","render","e","details","querySelector","open","onClick","preventDefault","isLimit","isTypeChecked","onEnter","key","addEventListener","field"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["export const DB_PATH = \"neo4j://abdf20aa.databases.neo4j.io\",\r\n  DB_USER = \"neo4j\",\r\n  DB_PASSWORD = \"B4uwAXSsSNmGXJjBlUVT5ejkJN3ym2HMxeZmNaTj3Co\";\r\n","\"use strict\";\r\n\r\nimport { DB_PATH, DB_USER, DB_PASSWORD } from \"./constants.js\";\r\n\r\nvar viz;\r\nconst limit = \"Incorrect number.\",\r\n  exist = \"Incorrect query.\",\r\n  checkbox = \"Select at least one option.\";\r\n\r\nfunction visible(item) {\r\n  item.classList.remove(\"not-visible\");\r\n  item.classList.add(\"visible\");\r\n}\r\n\r\nfunction notVisible(item) {\r\n  item.classList.add(\"not-visible\");\r\n}\r\n\r\nfunction showError(text) {\r\n  document.getElementById(\"message\").innerHTML = text;\r\n  visible(document.getElementById(\"message\"));\r\n}\r\n\r\nfunction getInputs() {\r\n  const inputs = document.querySelectorAll(\"input[type='checkbox']\");\r\n  return [...inputs].map((input) => input.checked);\r\n}\r\n\r\nfunction isChecked() {\r\n  return getInputs().includes(true);\r\n}\r\n\r\nfunction isLimitSelected() {\r\n  const textRecords = document.getElementById(\"textRecords\").value;\r\n  return textRecords !== null && textRecords !== \"\";\r\n}\r\n\r\nfunction createQuery() {\r\n  const inputs = getInputs();\r\n  const inputs_rel = {\r\n    0: \"(p)-[r:REL]-(t), \",\r\n    1: \"(p)-[e:EASY]-(t), \",\r\n    2: \"(p)-[h:HARD]-(t), \",\r\n  };\r\n\r\n  var match_q = \"MATCH \",\r\n    return_q = \"RETURN p, t, \",\r\n    query = \"\";\r\n\r\n  // match clause\r\n  inputs.forEach((input, index) => {\r\n    if (input) match_q += inputs_rel[index];\r\n  });\r\n  match_q = match_q.slice(0, -2);\r\n\r\n  // where clause\r\n  const textWeight = document.getElementById(\"textWeight\").value;\r\n  var where_q = \"\";\r\n  if (textWeight !== \"\") {\r\n    inputs.every((input, index) => {\r\n      console.log(input);\r\n      if (input) {\r\n        where_q = `toInteger(${inputs_rel[index].slice(\r\n          5,\r\n          6\r\n        )}.weight) >= ${+textWeight}`;\r\n        return false;\r\n      } else return true;\r\n    });\r\n  }\r\n\r\n  // return clause\r\n  inputs.forEach((input, index) => {\r\n    if (input) return_q += `${inputs_rel[index].slice(5, 6)}, `;\r\n  });\r\n  return_q = return_q.slice(0, -2);\r\n\r\n  if (isLimitSelected()) {\r\n    const textRecords = document.getElementById(\"textRecords\").value;\r\n    const textList = document.getElementById(\"textList\").value;\r\n    var list = textList.split(\", \");\r\n    query = `${match_q} where ${where_q} ${return_q} LIMIT ${textRecords}`;\r\n\r\n    if (list.length > 0 && list[0] !== \"\") {\r\n      const limitPerPlayer = Math.ceil(textRecords / list.length);\r\n      // limit clause\r\n      const limit_q = `LIMIT ${limitPerPlayer} UNION ALL `;\r\n\r\n      if (textWeight !== \"\") where_q = `and ${where_q}`;\r\n      list = list.map((player) => {\r\n        `${match_q} WHERE p.name = '${player}' ${where_q} ${return_q} ${limit_q}`;\r\n      });\r\n\r\n      query = list.join(\"\").slice(0, -11);\r\n    }\r\n  }\r\n\r\n  notVisible(document.getElementById(\"message\"));\r\n  console.log(query);\r\n  return query;\r\n}\r\n\r\nfunction isInt(num) {\r\n  return Number.isInteger(num) && num > 0 && num <= 1000;\r\n}\r\n\r\nfunction draw() {\r\n  var query = createQuery();\r\n  var config = {\r\n    container_id: \"viz\",\r\n    server_url: DB_PATH,\r\n    encrypted: \"ENCRYPTION_ON\",\r\n    server_user: DB_USER,\r\n    server_password: DB_PASSWORD,\r\n    labels: {\r\n      Player: {\r\n        caption: \"name\",\r\n        size: \"pagerank\",\r\n        community: \"community\",\r\n        title_properties: [\"name\", \"pagerank\", \"community\"],\r\n      },\r\n    },\r\n    relationships: {\r\n      REL: {\r\n        thickness: \"weight\",\r\n        caption: \"weight\",\r\n      },\r\n      EASY: {\r\n        thickness: \"weight\",\r\n        caption: \"weight\",\r\n      },\r\n      HARD: {\r\n        thickness: \"weight\",\r\n        caption: \"weight\",\r\n      },\r\n    },\r\n    initial_cypher: query,\r\n  };\r\n\r\n  try {\r\n    viz = new NeoVis.default(config);\r\n    viz.render();\r\n  } catch (e) {\r\n    console.log(\"Exception: \", e);\r\n    showError(exist);\r\n    return;\r\n  }\r\n\r\n  const details = document.querySelector(\"details\");\r\n  details.open = false;\r\n}\r\n\r\nfunction onClick(e) {\r\n  e.preventDefault();\r\n\r\n  const isLimit = isLimitSelected(),\r\n    isTypeChecked = isChecked(),\r\n    textRecords = document.getElementById(\"textRecords\").value,\r\n    textWeight = document.getElementById(\"textWeight\").value;\r\n\r\n  if (\r\n    (isLimit && !isInt(+textRecords)) ||\r\n    (!isInt(+textWeight) && textWeight !== \"\")\r\n  ) {\r\n    showError(limit);\r\n  } else if (!isLimit) {\r\n    document.getElementById(\"textRecords\").value = 500;\r\n    draw();\r\n  } else if (!isTypeChecked) {\r\n    showError(checkbox);\r\n  } else {\r\n    draw();\r\n  }\r\n}\r\n\r\nfunction onEnter(e) {\r\n  if (e.key === \"Enter\") {\r\n    onClick(e);\r\n  }\r\n}\r\n\r\ndocument.querySelector(\".trigger\").addEventListener(\"click\", onClick);\r\n\r\nconst input = document.querySelectorAll(\"input\");\r\n\r\ninput.forEach((field) => field.addEventListener(\"keypress\", onEnter));\r\n"]}