{"version":3,"sources":["constants.js","main.js"],"names":["DB_PATH","DB_USER","DB_PASSWORD","viz","empty","limit","exist","visible","item","classList","remove","add","notVisible","showError","text","document","getElementById","innerHTML","disable","disabled","value","enable","verify","radioPlayer","radioRecords","textPlayer","textRecords","textList","checked","isInt","list","split","cypher","length","limitPerPlayer","Math","ceil","return_q","map","player","match_q","join","slice","console","log","num","Number","isInteger","draw","res","config","container_id","server_url","encrypted","server_user","server_password","labels","Player","caption","relationships","REL","thickness","initial_cypher","NeoVis","default","render","querySelector","open","e","handleChange","onClick","preventDefault","onEnter","key","addEventListener","input","querySelectorAll","forEach","field"],"mappings":"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","file":"main.8393c7a0.js","sourceRoot":"..\\src","sourcesContent":["export const DB_PATH = \"neo4j://4e956df7.databases.neo4j.io\",\r\n  DB_USER = \"neo4j\",\r\n  DB_PASSWORD = \"PVu30YN-VesHEoS3HYj963nMp6oZRgDYmxfnQpaCuzs\";\r\n","\"use strict\";\r\n\r\nimport { DB_PATH, DB_USER, DB_PASSWORD } from \"./constants.js\";\r\n\r\nvar viz;\r\nconst empty = \"Field is empty.\",\r\n  limit = \"Incorrect number.\",\r\n  exist = \"Incorrect query.\";\r\n\r\nfunction visible(item) {\r\n  item.classList.remove(\"not-visible\");\r\n  item.classList.add(\"visible\");\r\n}\r\n\r\nfunction notVisible(item) {\r\n  item.classList.add(\"not-visible\");\r\n}\r\n\r\nfunction showError(text) {\r\n  document.getElementById(\"message\").innerHTML = text;\r\n  visible(document.getElementById(\"message\"));\r\n}\r\n\r\nfunction disable(item) {\r\n  item.disabled = true;\r\n  item.value = \"\";\r\n}\r\n\r\nfunction enable(item) {\r\n  item.disabled = false;\r\n}\r\n\r\nfunction verify() {\r\n  const radioPlayer = document.getElementById(\"radioPlayer\");\r\n  const radioRecords = document.getElementById(\"radioRecords\");\r\n  const textPlayer = document.getElementById(\"textPlayer\").value;\r\n  const textRecords = document.getElementById(\"textRecords\").value;\r\n  const textList = document.getElementById(\"textList\").value;\r\n\r\n  if (radioRecords.checked && textRecords !== null && textRecords !== \"\") {\r\n    if (isInt(+textRecords)) {\r\n      var list = textList.split(\",\");\r\n      var cypher = `MATCH (p)-[r]-(t) RETURN * LIMIT ${textRecords}`;\r\n\r\n      if (list.length > 0 && list[0] !== \"\") {\r\n        const limitPerPlayer = Math.ceil(textRecords / list.length);\r\n        const match_q = \"MATCH (p)-[r]-(t)\",\r\n          return_q = `RETURN p, r, t LIMIT ${limitPerPlayer} UNION ALL `;\r\n\r\n        list = list.map(\r\n          (player) => `${match_q} WHERE p.name = '${player}' ${return_q}`\r\n        );\r\n\r\n        cypher = list.join(\"\").slice(0, -11);\r\n      }\r\n\r\n      console.log(cypher);\r\n\r\n      notVisible(document.getElementById(\"message\"));\r\n\r\n      return cypher;\r\n    } else {\r\n      showError(limit);\r\n      return false;\r\n    }\r\n  } else if (radioPlayer.checked && textPlayer !== null && textPlayer !== \"\") {\r\n    const cypher = `MATCH (p {name: '${textPlayer}'})-[r]-(t) RETURN p, r, t`;\r\n    notVisible(document.getElementById(\"message\"));\r\n    return cypher;\r\n  } else {\r\n    showError(empty);\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction isInt(num) {\r\n  if (Number.isInteger(num) && num > 0 && num <= 1000) {\r\n    return true;\r\n  } else return false;\r\n}\r\n\r\nfunction draw() {\r\n  var res = verify();\r\n  if (!res) {\r\n    return;\r\n  }\r\n  var config = {\r\n    container_id: \"viz\",\r\n    server_url: DB_PATH,\r\n    encrypted: \"ENCRYPTION_ON\",\r\n    server_user: DB_USER,\r\n    server_password: DB_PASSWORD,\r\n    labels: {\r\n      Player: {\r\n        caption: \"name\",\r\n      },\r\n    },\r\n    relationships: {\r\n      REL: {\r\n        thickness: \"weight\",\r\n        caption: \"weight\",\r\n      },\r\n    },\r\n    initial_cypher: res,\r\n  };\r\n\r\n  try {\r\n    viz = new NeoVis.default(config);\r\n    viz.render();\r\n\r\n    const details = document.querySelector(\"details\");\r\n    details.open = false;\r\n  } catch (e) {\r\n    console.log(e);\r\n    showError(exist);\r\n  }\r\n}\r\n\r\nfunction handleChange() {\r\n  const radioPlayer = document.getElementById(\"radioPlayer\");\r\n  const radioRecords = document.getElementById(\"radioRecords\");\r\n  var textPlayer = document.getElementById(\"textPlayer\");\r\n  var textRecords = document.getElementById(\"textRecords\");\r\n  var textList = document.getElementById(\"textList\");\r\n\r\n  if (radioPlayer.checked) {\r\n    disable(textRecords);\r\n    disable(textList);\r\n    enable(textPlayer);\r\n  } else if (radioRecords.checked) {\r\n    disable(textPlayer);\r\n    enable(textRecords);\r\n    enable(textList);\r\n  }\r\n}\r\n\r\nfunction onClick(e) {\r\n  e.preventDefault();\r\n  draw();\r\n}\r\n\r\nfunction onEnter(e) {\r\n  if (e.key === \"Enter\") {\r\n    onClick(e);\r\n  }\r\n}\r\n\r\ndocument.getElementById(\"radioPlayer\").addEventListener(\"change\", handleChange);\r\ndocument\r\n  .getElementById(\"radioRecords\")\r\n  .addEventListener(\"change\", handleChange);\r\n\r\ndocument.querySelector(\".trigger\").addEventListener(\"click\", onClick);\r\n\r\nconst input = document.querySelectorAll(\"input\");\r\n\r\ninput.forEach((field) => field.addEventListener(\"keypress\", onEnter));\r\n"]}