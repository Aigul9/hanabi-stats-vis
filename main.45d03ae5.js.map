{"version":3,"sources":["constants.js","main.js"],"names":["DB_PATH","DB_USER","DB_PASSWORD","viz","t","limit","exist","checkbox","visible","item","classList","remove","add","notVisible","show","hide","showError","text","document","getElementById","innerHTML","getInputs","querySelectorAll","map","input","checked","isChecked","includes","isLimitSelected","textRecords","value","createQuery","inputs","inputs_rel","match_q","return_q","query","forEach","index","slice","textWeight","where_q","every","list","split","length","limitPerPlayer","Math","ceil","limit_q","player","join","console","log","isInt","num","Number","isInteger","draw","config","container_id","server_url","encrypted","server_user","server_password","labels","Player","caption","size","community","title_properties","relationships","REL","thickness","EASY","HARD","initial_cypher","NeoVis","default","setInterval","printViz","render","e","querySelector","open","spinner","onClick","preventDefault","isLimit","isTypeChecked","onEnter","key","undefined","Object","keys","_nodes","_edges","clearInterval","onToggle","details","addEventListener","field"],"mappings":"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","file":"main.45d03ae5.js","sourceRoot":"..\\src","sourcesContent":["export const DB_PATH = \"neo4j://abdf20aa.databases.neo4j.io\",\r\n  DB_USER = \"neo4j\",\r\n  DB_PASSWORD = \"B4uwAXSsSNmGXJjBlUVT5ejkJN3ym2HMxeZmNaTj3Co\";\r\n","\"use strict\";\r\n\r\nimport { DB_PATH, DB_USER, DB_PASSWORD } from \"./constants.js\";\r\n\r\nvar viz;\r\nvar t;\r\n\r\nconst limit = \"Incorrect limit.\",\r\n  exist = \"Incorrect query.\",\r\n  checkbox = \"Select at least one option.\";\r\n\r\nfunction visible(item) {\r\n  item.classList.remove(\"not-visible\");\r\n  item.classList.add(\"visible\");\r\n}\r\n\r\nfunction notVisible(item) {\r\n  item.classList.add(\"not-visible\");\r\n}\r\n\r\nfunction show(item) {\r\n  item.classList.remove(\"hide\");\r\n  item.classList.add(\"show\");\r\n}\r\n\r\nfunction hide(item) {\r\n  item.classList.remove(\"show\");\r\n  item.classList.add(\"hide\");\r\n}\r\n\r\nfunction showError(text) {\r\n  document.getElementById(\"message\").innerHTML = text;\r\n  visible(document.getElementById(\"message\"));\r\n}\r\n\r\nfunction getInputs() {\r\n  const inputs = document.querySelectorAll(\"input[type='checkbox']\");\r\n  return [...inputs].map((input) => input.checked);\r\n}\r\n\r\nfunction isChecked() {\r\n  return getInputs().includes(true);\r\n}\r\n\r\nfunction isLimitSelected() {\r\n  const textRecords = document.getElementById(\"textRecords\").value;\r\n  return textRecords !== null && textRecords !== \"\";\r\n}\r\n\r\nfunction createQuery() {\r\n  const inputs = getInputs();\r\n  const inputs_rel = {\r\n    0: \"(p)-[r:REL]-(t), \",\r\n    1: \"(p)-[e:EASY]-(t), \",\r\n    2: \"(p)-[h:HARD]-(t), \",\r\n  };\r\n\r\n  var match_q = \"MATCH \",\r\n    return_q = \"RETURN p, t, \",\r\n    query = \"\";\r\n\r\n  // match clause\r\n  inputs.forEach((input, index) => {\r\n    if (input) match_q += inputs_rel[index];\r\n  });\r\n  match_q = match_q.slice(0, -2);\r\n\r\n  // where clause\r\n  const textWeight = document.getElementById(\"textWeight\").value;\r\n  var where_q = \"\";\r\n  if (textWeight !== \"\") {\r\n    inputs.every((input, index) => {\r\n      if (input) {\r\n        where_q = `toInteger(${inputs_rel[index].slice(\r\n          5,\r\n          6\r\n        )}.weight) >= ${+textWeight}`;\r\n        return false;\r\n      } else return true;\r\n    });\r\n  }\r\n\r\n  // return clause\r\n  inputs.forEach((input, index) => {\r\n    if (input) return_q += `${inputs_rel[index].slice(5, 6)}, `;\r\n  });\r\n  return_q = return_q.slice(0, -2);\r\n\r\n  if (isLimitSelected()) {\r\n    const textRecords = document.getElementById(\"textRecords\").value;\r\n    const textList = document.getElementById(\"textList\").value;\r\n    var list = textList.split(\", \");\r\n\r\n    if (list.length > 0 && list[0] !== \"\") {\r\n      const limitPerPlayer = Math.ceil(textRecords / list.length);\r\n      // limit clause\r\n      const limit_q = `LIMIT ${limitPerPlayer} UNION ALL `;\r\n\r\n      if (textWeight !== \"\") where_q = `and ${where_q} `;\r\n      list = list.map(\r\n        (player) =>\r\n          `${match_q} WHERE p.name = '${player}' ${where_q}${return_q} ${limit_q}`\r\n      );\r\n\r\n      query = list.join(\"\").slice(0, -11);\r\n    } else {\r\n      if (textWeight !== \"\") where_q = `where ${where_q} `;\r\n      query = `${match_q} ${where_q}${return_q} LIMIT ${textRecords}`;\r\n    }\r\n  }\r\n\r\n  notVisible(document.getElementById(\"message\"));\r\n  console.log(query);\r\n  return query;\r\n}\r\n\r\nfunction isInt(num) {\r\n  return Number.isInteger(num) && num > 0;\r\n}\r\n\r\nfunction draw() {\r\n  var query = createQuery();\r\n  var config = {\r\n    container_id: \"viz\",\r\n    server_url: DB_PATH,\r\n    encrypted: \"ENCRYPTION_ON\",\r\n    server_user: DB_USER,\r\n    server_password: DB_PASSWORD,\r\n    labels: {\r\n      Player: {\r\n        caption: \"name\",\r\n        size: \"pagerank\",\r\n        community: \"community\",\r\n        title_properties: [\"name\", \"pagerank\", \"community\"],\r\n      },\r\n    },\r\n    relationships: {\r\n      REL: {\r\n        thickness: \"weight\",\r\n        caption: \"weight\",\r\n      },\r\n      EASY: {\r\n        thickness: \"weight\",\r\n        caption: \"weight\",\r\n      },\r\n      HARD: {\r\n        thickness: \"weight\",\r\n        caption: \"weight\",\r\n      },\r\n    },\r\n    initial_cypher: query,\r\n  };\r\n\r\n  try {\r\n    viz = new NeoVis.default(config);\r\n    t = setInterval(printViz, 1000);\r\n    viz.render();\r\n  } catch (e) {\r\n    console.log(\"Exception: \", e);\r\n    showError(exist);\r\n    return;\r\n  }\r\n\r\n  const details = document.querySelector(\"details\");\r\n  details.open = false;\r\n\r\n  const spinner = document.getElementById(\"spinner\");\r\n  spinner.innerHTML = \"Loading...\";\r\n  show(spinner);\r\n}\r\n\r\nfunction onClick(e) {\r\n  e.preventDefault();\r\n\r\n  const isLimit = isLimitSelected(),\r\n    isTypeChecked = isChecked(),\r\n    textRecords = document.getElementById(\"textRecords\").value,\r\n    textWeight = document.getElementById(\"textWeight\").value;\r\n\r\n  if (\r\n    (isLimit && (!isInt(+textRecords) || +textRecords > 1000)) ||\r\n    (!isInt(+textWeight) && textWeight !== \"\")\r\n  ) {\r\n    showError(limit);\r\n  } else if (!isLimit) {\r\n    document.getElementById(\"textRecords\").value = 500;\r\n    draw();\r\n  } else if (!isTypeChecked) {\r\n    showError(checkbox);\r\n  } else {\r\n    draw();\r\n  }\r\n}\r\n\r\nfunction onEnter(e) {\r\n  if (e.key === \"Enter\") {\r\n    onClick(e);\r\n  }\r\n}\r\n\r\nfunction printViz() {\r\n  if (viz !== undefined) {\r\n    const spinner = document.getElementById(\"spinner\");\r\n    if (Object.keys(viz._nodes).length !== 0) {\r\n      console.log(`Nodes: ${Object.keys(viz._nodes).length}`);\r\n      console.log(`Edges: ${Object.keys(viz._edges).length}`);\r\n      hide(spinner);\r\n    } else {\r\n      spinner.innerHTML = \"No results\";\r\n    }\r\n\r\n    clearInterval(t);\r\n  }\r\n}\r\n\r\nfunction onToggle() {\r\n  const spinner = document.getElementById(\"spinner\"),\r\n    details = document.querySelector(\"details\");\r\n  if (details.open == true) {\r\n    hide(spinner);\r\n  } else if (details.open == false && Object.keys(viz._nodes).length === 0) {\r\n    show(spinner);\r\n  }\r\n}\r\n\r\ndocument.querySelector(\".trigger\").addEventListener(\"click\", onClick);\r\n\r\nconst input = document.querySelectorAll(\"input\");\r\ninput.forEach((field) => field.addEventListener(\"keypress\", onEnter));\r\n\r\nconst details = document.querySelector(\"details\");\r\ndetails.addEventListener(\"toggle\", onToggle);\r\n"]}